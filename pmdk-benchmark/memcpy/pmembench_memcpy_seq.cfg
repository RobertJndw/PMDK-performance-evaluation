# Global parameters
[global]
group = pmem_memcpy_seq
ops-per-thread = 100000
no-warmup = false
threads = 1
# 8B to 8KB
data-size = 8:*2:8192
# copy mode random
src-mode = seq
dest-mode = seq
# from RAM to PMEM
operation = write

 
# pmem_memcpy pmem_memcpy_persist()
[pmem_memcpy_persist]
bench = pmem_memcpy
libc-memcpy = false
persist = true
 
# pmem_memcpy pmem_memcpy_nodrain()
[pmem_memcpy_nodrain]
bench = pmem_memcpy
libc-memcpy = false
persist = false
 
# pmem_memcpy standard memcpy()
# followed by pmem_persist()
[libc_memcpy_persist]
bench = pmem_memcpy
libc-memcpy = true
persist = true
 
# pmem_memcpy standard memcpy()
# followed by pmem_flush()
[libc_memcpy_flush]
bench = pmem_memcpy
libc-memcpy = true
persist = false

# pmem_memcpy standard memcpy()
[libc_memcpy]
bench = pmem_memcpy
libc-memcpy = true
skip-flush = true

# pmem_memcpy standard memmove()
[libc_memmove]
bench = pmem_memcpy
libc-memmove = true